version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: trade-crafter-postgres
    environment:
      POSTGRES_DB: trade_crafter
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - trade-crafter-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: trade-crafter-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - trade-crafter-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend Application
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: trade-crafter-backend
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/trade_crafter
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379
      JWT_SECRET: your-super-secret-jwt-key-here-make-it-long-and-secure
      BINANCE_API_KEY: ${BINANCE_API_KEY:-}
      BINANCE_SECRET_KEY: ${BINANCE_SECRET_KEY:-}
      ALPHA_VANTAGE_API_KEY: ${ALPHA_VANTAGE_API_KEY:-}
      POLYGON_API_KEY: ${POLYGON_API_KEY:-}
      FINNHUB_API_KEY: ${FINNHUB_API_KEY:-}
      GMAIL_USERNAME: ${GMAIL_USERNAME:-}
      GMAIL_APP_PASSWORD: ${GMAIL_APP_PASSWORD:-}
      VAPID_PUBLIC_KEY: ${VAPID_PUBLIC_KEY:-}
      VAPID_PRIVATE_KEY: ${VAPID_PRIVATE_KEY:-}
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - trade-crafter-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend Application
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: trade-crafter-frontend
    environment:
      VITE_API_BASE_URL: http://localhost:8080/api
      VITE_WS_BASE_URL: ws://localhost:8080/api/ws
    ports:
      - "5173:5173"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - trade-crafter-network
    volumes:
      - ./src:/app/src
      - ./public:/app/public
      - /app/node_modules

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: trade-crafter-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - trade-crafter-network
    profiles:
      - production

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  trade-crafter-network:
    driver: bridge